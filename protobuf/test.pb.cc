// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#include "test.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace zxtest {
namespace prototest {
class TestSendDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestSend>
      _instance;
} _TestSend_default_instance_;
class TestReceiveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestReceive>
      _instance;
} _TestReceive_default_instance_;
class TestSendArrayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestSendArray>
      _instance;
} _TestSendArray_default_instance_;
class TestSendMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestSendMsg>
      _instance;
} _TestSendMsg_default_instance_;
class TestSendArrayMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestSendArrayMsg>
      _instance;
} _TestSendArrayMsg_default_instance_;
class TestImportDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestImport>
      _instance;
} _TestImport_default_instance_;
class TestmessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Testmessage>
      _instance;
} _Testmessage_default_instance_;
}  // namespace prototest
}  // namespace zxtest
namespace protobuf_test_2eproto {
void InitDefaultsTestSendImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::zxtest::prototest::_TestSend_default_instance_;
    new (ptr) ::zxtest::prototest::TestSend();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zxtest::prototest::TestSend::InitAsDefaultInstance();
}

void InitDefaultsTestSend() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTestSendImpl);
}

void InitDefaultsTestReceiveImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::zxtest::prototest::_TestReceive_default_instance_;
    new (ptr) ::zxtest::prototest::TestReceive();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zxtest::prototest::TestReceive::InitAsDefaultInstance();
}

void InitDefaultsTestReceive() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTestReceiveImpl);
}

void InitDefaultsTestSendArrayImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::zxtest::prototest::_TestSendArray_default_instance_;
    new (ptr) ::zxtest::prototest::TestSendArray();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zxtest::prototest::TestSendArray::InitAsDefaultInstance();
}

void InitDefaultsTestSendArray() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTestSendArrayImpl);
}

void InitDefaultsTestSendMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_test_2eproto::InitDefaultsTestSendArray();
  {
    void* ptr = &::zxtest::prototest::_TestSendMsg_default_instance_;
    new (ptr) ::zxtest::prototest::TestSendMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zxtest::prototest::TestSendMsg::InitAsDefaultInstance();
}

void InitDefaultsTestSendMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTestSendMsgImpl);
}

void InitDefaultsTestSendArrayMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_test_2eproto::InitDefaultsTestSendArray();
  {
    void* ptr = &::zxtest::prototest::_TestSendArrayMsg_default_instance_;
    new (ptr) ::zxtest::prototest::TestSendArrayMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zxtest::prototest::TestSendArrayMsg::InitAsDefaultInstance();
}

void InitDefaultsTestSendArrayMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTestSendArrayMsgImpl);
}

void InitDefaultsTestImportImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_user_2eproto::InitDefaultsUserInfo();
  protobuf_log_2eproto::InitDefaultsSendLog();
  {
    void* ptr = &::zxtest::prototest::_TestImport_default_instance_;
    new (ptr) ::zxtest::prototest::TestImport();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zxtest::prototest::TestImport::InitAsDefaultInstance();
}

void InitDefaultsTestImport() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTestImportImpl);
}

void InitDefaultsTestmessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_test_2eproto::InitDefaultsTestSendArray();
  protobuf_user_2eproto::InitDefaultsUserInfo();
  {
    void* ptr = &::zxtest::prototest::_Testmessage_default_instance_;
    new (ptr) ::zxtest::prototest::Testmessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zxtest::prototest::Testmessage::InitAsDefaultInstance();
}

void InitDefaultsTestmessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTestmessageImpl);
}

::google::protobuf::Metadata file_level_metadata[7];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zxtest::prototest::TestSend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zxtest::prototest::TestSend, sname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zxtest::prototest::TestSend, u32number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zxtest::prototest::TestSend, isserializearray_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zxtest::prototest::TestReceive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zxtest::prototest::TestReceive, enumcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zxtest::prototest::TestReceive, srename_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zxtest::prototest::TestSendArray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zxtest::prototest::TestSendArray, sname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zxtest::prototest::TestSendArray, u32number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zxtest::prototest::TestSendArray, usernames_array_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zxtest::prototest::TestSendMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zxtest::prototest::TestSendMsg, smsg_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zxtest::prototest::TestSendMsg, msg_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zxtest::prototest::TestSendArrayMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zxtest::prototest::TestSendArrayMsg, smsg_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zxtest::prototest::TestSendArrayMsg, msg_array_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zxtest::prototest::TestImport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zxtest::prototest::TestImport, simport_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zxtest::prototest::TestImport, userinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zxtest::prototest::TestImport, log_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zxtest::prototest::Testmessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zxtest::prototest::Testmessage, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zxtest::prototest::Testmessage, enumcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zxtest::prototest::Testmessage, u32number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zxtest::prototest::Testmessage, msg_array_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zxtest::prototest::Testmessage, info_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::zxtest::prototest::TestSend)},
  { 8, -1, sizeof(::zxtest::prototest::TestReceive)},
  { 15, -1, sizeof(::zxtest::prototest::TestSendArray)},
  { 23, -1, sizeof(::zxtest::prototest::TestSendMsg)},
  { 30, -1, sizeof(::zxtest::prototest::TestSendArrayMsg)},
  { 37, -1, sizeof(::zxtest::prototest::TestImport)},
  { 45, -1, sizeof(::zxtest::prototest::Testmessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::zxtest::prototest::_TestSend_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zxtest::prototest::_TestReceive_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zxtest::prototest::_TestSendArray_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zxtest::prototest::_TestSendMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zxtest::prototest::_TestSendArrayMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zxtest::prototest::_TestImport_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zxtest::prototest::_Testmessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "test.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\ntest.proto\022\020zxtest.prototest\032\nuser.pro"
      "to\032\tlog.proto\"F\n\010TestSend\022\r\n\005sname\030\001 \001(\t"
      "\022\021\n\tu32number\030\002 \001(\r\022\030\n\020isSerializeArray\030"
      "\003 \001(\010\"J\n\013TestReceive\022*\n\010enumcode\030\001 \001(\0162\030"
      ".zxtest.prototest.Recode\022\017\n\007srename\030\002 \001("
      "\t\"J\n\rTestSendArray\022\r\n\005sname\030\001 \001(\t\022\021\n\tu32"
      "number\030\002 \003(\r\022\027\n\017usernames_array\030\003 \003(\t\"S\n"
      "\013TestSendMsg\022\021\n\tsMsg_name\030\001 \001(\t\0221\n\010Msg_i"
      "nfo\030\002 \001(\0132\037.zxtest.prototest.TestSendArr"
      "ay\"Y\n\020TestSendArrayMsg\022\021\n\tsMsg_name\030\001 \001("
      "\t\0222\n\tMsg_array\030\002 \003(\0132\037.zxtest.prototest."
      "TestSendArray\"m\n\nTestImport\022\024\n\014sImport_n"
      "ame\030\001 \001(\t\022\'\n\010userinfo\030\002 \001(\0132\025.zxtest.use"
      "r.UserInfo\022 \n\003Log\030\003 \001(\0132\023.zxtest.log.Sen"
      "dLog\"\263\001\n\013Testmessage\022\014\n\004name\030\001 \001(\t\022*\n\010en"
      "umcode\030\002 \001(\0162\030.zxtest.prototest.Recode\022\021"
      "\n\tu32number\030\003 \003(\r\0222\n\tMsg_array\030\004 \001(\0132\037.z"
      "xtest.prototest.TestSendArray\022#\n\004info\030\005 "
      "\001(\0132\025.zxtest.user.UserInfo* \n\006Recode\022\013\n\007"
      "SUCCESS\020\000\022\t\n\005ERROR\020\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 788);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "test.proto", &protobuf_RegisterTypes);
  ::protobuf_user_2eproto::AddDescriptors();
  ::protobuf_log_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_test_2eproto
namespace zxtest {
namespace prototest {
const ::google::protobuf::EnumDescriptor* Recode_descriptor() {
  protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_test_2eproto::file_level_enum_descriptors[0];
}
bool Recode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void TestSend::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestSend::kSnameFieldNumber;
const int TestSend::kU32NumberFieldNumber;
const int TestSend::kIsSerializeArrayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestSend::TestSend()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_test_2eproto::InitDefaultsTestSend();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zxtest.prototest.TestSend)
}
TestSend::TestSend(const TestSend& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sname().size() > 0) {
    sname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sname_);
  }
  ::memcpy(&u32number_, &from.u32number_,
    static_cast<size_t>(reinterpret_cast<char*>(&isserializearray_) -
    reinterpret_cast<char*>(&u32number_)) + sizeof(isserializearray_));
  // @@protoc_insertion_point(copy_constructor:zxtest.prototest.TestSend)
}

void TestSend::SharedCtor() {
  sname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&u32number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isserializearray_) -
      reinterpret_cast<char*>(&u32number_)) + sizeof(isserializearray_));
  _cached_size_ = 0;
}

TestSend::~TestSend() {
  // @@protoc_insertion_point(destructor:zxtest.prototest.TestSend)
  SharedDtor();
}

void TestSend::SharedDtor() {
  sname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestSend::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestSend::descriptor() {
  ::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestSend& TestSend::default_instance() {
  ::protobuf_test_2eproto::InitDefaultsTestSend();
  return *internal_default_instance();
}


void TestSend::Clear() {
// @@protoc_insertion_point(message_clear_start:zxtest.prototest.TestSend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&u32number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isserializearray_) -
      reinterpret_cast<char*>(&u32number_)) + sizeof(isserializearray_));
  _internal_metadata_.Clear();
}

bool TestSend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zxtest.prototest.TestSend)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sname().data(), static_cast<int>(this->sname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "zxtest.prototest.TestSend.sname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 u32number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &u32number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isSerializeArray = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isserializearray_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zxtest.prototest.TestSend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zxtest.prototest.TestSend)
  return false;
#undef DO_
}

void TestSend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zxtest.prototest.TestSend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sname = 1;
  if (this->sname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sname().data(), static_cast<int>(this->sname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "zxtest.prototest.TestSend.sname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sname(), output);
  }

  // uint32 u32number = 2;
  if (this->u32number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->u32number(), output);
  }

  // bool isSerializeArray = 3;
  if (this->isserializearray() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->isserializearray(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:zxtest.prototest.TestSend)
}

::google::protobuf::uint8* TestSend::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zxtest.prototest.TestSend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sname = 1;
  if (this->sname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sname().data(), static_cast<int>(this->sname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "zxtest.prototest.TestSend.sname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sname(), target);
  }

  // uint32 u32number = 2;
  if (this->u32number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->u32number(), target);
  }

  // bool isSerializeArray = 3;
  if (this->isserializearray() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->isserializearray(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zxtest.prototest.TestSend)
  return target;
}

size_t TestSend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zxtest.prototest.TestSend)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sname = 1;
  if (this->sname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sname());
  }

  // uint32 u32number = 2;
  if (this->u32number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->u32number());
  }

  // bool isSerializeArray = 3;
  if (this->isserializearray() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestSend::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zxtest.prototest.TestSend)
  GOOGLE_DCHECK_NE(&from, this);
  const TestSend* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestSend>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zxtest.prototest.TestSend)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zxtest.prototest.TestSend)
    MergeFrom(*source);
  }
}

void TestSend::MergeFrom(const TestSend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zxtest.prototest.TestSend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sname().size() > 0) {

    sname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sname_);
  }
  if (from.u32number() != 0) {
    set_u32number(from.u32number());
  }
  if (from.isserializearray() != 0) {
    set_isserializearray(from.isserializearray());
  }
}

void TestSend::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zxtest.prototest.TestSend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestSend::CopyFrom(const TestSend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zxtest.prototest.TestSend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestSend::IsInitialized() const {
  return true;
}

void TestSend::Swap(TestSend* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestSend::InternalSwap(TestSend* other) {
  using std::swap;
  sname_.Swap(&other->sname_);
  swap(u32number_, other->u32number_);
  swap(isserializearray_, other->isserializearray_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestSend::GetMetadata() const {
  protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TestReceive::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestReceive::kEnumcodeFieldNumber;
const int TestReceive::kSrenameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestReceive::TestReceive()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_test_2eproto::InitDefaultsTestReceive();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zxtest.prototest.TestReceive)
}
TestReceive::TestReceive(const TestReceive& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  srename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.srename().size() > 0) {
    srename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.srename_);
  }
  enumcode_ = from.enumcode_;
  // @@protoc_insertion_point(copy_constructor:zxtest.prototest.TestReceive)
}

void TestReceive::SharedCtor() {
  srename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enumcode_ = 0;
  _cached_size_ = 0;
}

TestReceive::~TestReceive() {
  // @@protoc_insertion_point(destructor:zxtest.prototest.TestReceive)
  SharedDtor();
}

void TestReceive::SharedDtor() {
  srename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestReceive::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestReceive::descriptor() {
  ::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestReceive& TestReceive::default_instance() {
  ::protobuf_test_2eproto::InitDefaultsTestReceive();
  return *internal_default_instance();
}


void TestReceive::Clear() {
// @@protoc_insertion_point(message_clear_start:zxtest.prototest.TestReceive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  srename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enumcode_ = 0;
  _internal_metadata_.Clear();
}

bool TestReceive::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zxtest.prototest.TestReceive)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .zxtest.prototest.Recode enumcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_enumcode(static_cast< ::zxtest::prototest::Recode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string srename = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->srename().data(), static_cast<int>(this->srename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "zxtest.prototest.TestReceive.srename"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zxtest.prototest.TestReceive)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zxtest.prototest.TestReceive)
  return false;
#undef DO_
}

void TestReceive::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zxtest.prototest.TestReceive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .zxtest.prototest.Recode enumcode = 1;
  if (this->enumcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->enumcode(), output);
  }

  // string srename = 2;
  if (this->srename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->srename().data(), static_cast<int>(this->srename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "zxtest.prototest.TestReceive.srename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->srename(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:zxtest.prototest.TestReceive)
}

::google::protobuf::uint8* TestReceive::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zxtest.prototest.TestReceive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .zxtest.prototest.Recode enumcode = 1;
  if (this->enumcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->enumcode(), target);
  }

  // string srename = 2;
  if (this->srename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->srename().data(), static_cast<int>(this->srename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "zxtest.prototest.TestReceive.srename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->srename(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zxtest.prototest.TestReceive)
  return target;
}

size_t TestReceive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zxtest.prototest.TestReceive)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string srename = 2;
  if (this->srename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->srename());
  }

  // .zxtest.prototest.Recode enumcode = 1;
  if (this->enumcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->enumcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestReceive::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zxtest.prototest.TestReceive)
  GOOGLE_DCHECK_NE(&from, this);
  const TestReceive* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestReceive>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zxtest.prototest.TestReceive)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zxtest.prototest.TestReceive)
    MergeFrom(*source);
  }
}

void TestReceive::MergeFrom(const TestReceive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zxtest.prototest.TestReceive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.srename().size() > 0) {

    srename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.srename_);
  }
  if (from.enumcode() != 0) {
    set_enumcode(from.enumcode());
  }
}

void TestReceive::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zxtest.prototest.TestReceive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestReceive::CopyFrom(const TestReceive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zxtest.prototest.TestReceive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestReceive::IsInitialized() const {
  return true;
}

void TestReceive::Swap(TestReceive* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestReceive::InternalSwap(TestReceive* other) {
  using std::swap;
  srename_.Swap(&other->srename_);
  swap(enumcode_, other->enumcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestReceive::GetMetadata() const {
  protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TestSendArray::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestSendArray::kSnameFieldNumber;
const int TestSendArray::kU32NumberFieldNumber;
const int TestSendArray::kUsernamesArrayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestSendArray::TestSendArray()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_test_2eproto::InitDefaultsTestSendArray();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zxtest.prototest.TestSendArray)
}
TestSendArray::TestSendArray(const TestSendArray& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      u32number_(from.u32number_),
      usernames_array_(from.usernames_array_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sname().size() > 0) {
    sname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sname_);
  }
  // @@protoc_insertion_point(copy_constructor:zxtest.prototest.TestSendArray)
}

void TestSendArray::SharedCtor() {
  sname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TestSendArray::~TestSendArray() {
  // @@protoc_insertion_point(destructor:zxtest.prototest.TestSendArray)
  SharedDtor();
}

void TestSendArray::SharedDtor() {
  sname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestSendArray::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestSendArray::descriptor() {
  ::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestSendArray& TestSendArray::default_instance() {
  ::protobuf_test_2eproto::InitDefaultsTestSendArray();
  return *internal_default_instance();
}


void TestSendArray::Clear() {
// @@protoc_insertion_point(message_clear_start:zxtest.prototest.TestSendArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  u32number_.Clear();
  usernames_array_.Clear();
  sname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool TestSendArray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zxtest.prototest.TestSendArray)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sname().data(), static_cast<int>(this->sname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "zxtest.prototest.TestSendArray.sname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 u32number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_u32number())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_u32number())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string usernames_array = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_usernames_array()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->usernames_array(this->usernames_array_size() - 1).data(),
            static_cast<int>(this->usernames_array(this->usernames_array_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "zxtest.prototest.TestSendArray.usernames_array"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zxtest.prototest.TestSendArray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zxtest.prototest.TestSendArray)
  return false;
#undef DO_
}

void TestSendArray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zxtest.prototest.TestSendArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sname = 1;
  if (this->sname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sname().data(), static_cast<int>(this->sname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "zxtest.prototest.TestSendArray.sname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sname(), output);
  }

  // repeated uint32 u32number = 2;
  if (this->u32number_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _u32number_cached_byte_size_));
  }
  for (int i = 0, n = this->u32number_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->u32number(i), output);
  }

  // repeated string usernames_array = 3;
  for (int i = 0, n = this->usernames_array_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->usernames_array(i).data(), static_cast<int>(this->usernames_array(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "zxtest.prototest.TestSendArray.usernames_array");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->usernames_array(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:zxtest.prototest.TestSendArray)
}

::google::protobuf::uint8* TestSendArray::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zxtest.prototest.TestSendArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sname = 1;
  if (this->sname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sname().data(), static_cast<int>(this->sname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "zxtest.prototest.TestSendArray.sname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sname(), target);
  }

  // repeated uint32 u32number = 2;
  if (this->u32number_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _u32number_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->u32number_, target);
  }

  // repeated string usernames_array = 3;
  for (int i = 0, n = this->usernames_array_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->usernames_array(i).data(), static_cast<int>(this->usernames_array(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "zxtest.prototest.TestSendArray.usernames_array");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->usernames_array(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zxtest.prototest.TestSendArray)
  return target;
}

size_t TestSendArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zxtest.prototest.TestSendArray)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 u32number = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->u32number_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _u32number_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string usernames_array = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->usernames_array_size());
  for (int i = 0, n = this->usernames_array_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->usernames_array(i));
  }

  // string sname = 1;
  if (this->sname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestSendArray::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zxtest.prototest.TestSendArray)
  GOOGLE_DCHECK_NE(&from, this);
  const TestSendArray* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestSendArray>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zxtest.prototest.TestSendArray)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zxtest.prototest.TestSendArray)
    MergeFrom(*source);
  }
}

void TestSendArray::MergeFrom(const TestSendArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zxtest.prototest.TestSendArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  u32number_.MergeFrom(from.u32number_);
  usernames_array_.MergeFrom(from.usernames_array_);
  if (from.sname().size() > 0) {

    sname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sname_);
  }
}

void TestSendArray::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zxtest.prototest.TestSendArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestSendArray::CopyFrom(const TestSendArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zxtest.prototest.TestSendArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestSendArray::IsInitialized() const {
  return true;
}

void TestSendArray::Swap(TestSendArray* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestSendArray::InternalSwap(TestSendArray* other) {
  using std::swap;
  u32number_.InternalSwap(&other->u32number_);
  usernames_array_.InternalSwap(CastToBase(&other->usernames_array_));
  sname_.Swap(&other->sname_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestSendArray::GetMetadata() const {
  protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TestSendMsg::InitAsDefaultInstance() {
  ::zxtest::prototest::_TestSendMsg_default_instance_._instance.get_mutable()->msg_info_ = const_cast< ::zxtest::prototest::TestSendArray*>(
      ::zxtest::prototest::TestSendArray::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestSendMsg::kSMsgNameFieldNumber;
const int TestSendMsg::kMsgInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestSendMsg::TestSendMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_test_2eproto::InitDefaultsTestSendMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zxtest.prototest.TestSendMsg)
}
TestSendMsg::TestSendMsg(const TestSendMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  smsg_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsg_name().size() > 0) {
    smsg_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsg_name_);
  }
  if (from.has_msg_info()) {
    msg_info_ = new ::zxtest::prototest::TestSendArray(*from.msg_info_);
  } else {
    msg_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zxtest.prototest.TestSendMsg)
}

void TestSendMsg::SharedCtor() {
  smsg_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_info_ = NULL;
  _cached_size_ = 0;
}

TestSendMsg::~TestSendMsg() {
  // @@protoc_insertion_point(destructor:zxtest.prototest.TestSendMsg)
  SharedDtor();
}

void TestSendMsg::SharedDtor() {
  smsg_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete msg_info_;
}

void TestSendMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestSendMsg::descriptor() {
  ::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestSendMsg& TestSendMsg::default_instance() {
  ::protobuf_test_2eproto::InitDefaultsTestSendMsg();
  return *internal_default_instance();
}


void TestSendMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:zxtest.prototest.TestSendMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  smsg_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && msg_info_ != NULL) {
    delete msg_info_;
  }
  msg_info_ = NULL;
  _internal_metadata_.Clear();
}

bool TestSendMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zxtest.prototest.TestSendMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sMsg_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsg_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsg_name().data(), static_cast<int>(this->smsg_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "zxtest.prototest.TestSendMsg.sMsg_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zxtest.prototest.TestSendArray Msg_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_msg_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zxtest.prototest.TestSendMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zxtest.prototest.TestSendMsg)
  return false;
#undef DO_
}

void TestSendMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zxtest.prototest.TestSendMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sMsg_name = 1;
  if (this->smsg_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsg_name().data(), static_cast<int>(this->smsg_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "zxtest.prototest.TestSendMsg.sMsg_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->smsg_name(), output);
  }

  // .zxtest.prototest.TestSendArray Msg_info = 2;
  if (this->has_msg_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *msg_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:zxtest.prototest.TestSendMsg)
}

::google::protobuf::uint8* TestSendMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zxtest.prototest.TestSendMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sMsg_name = 1;
  if (this->smsg_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsg_name().data(), static_cast<int>(this->smsg_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "zxtest.prototest.TestSendMsg.sMsg_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->smsg_name(), target);
  }

  // .zxtest.prototest.TestSendArray Msg_info = 2;
  if (this->has_msg_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *msg_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zxtest.prototest.TestSendMsg)
  return target;
}

size_t TestSendMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zxtest.prototest.TestSendMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sMsg_name = 1;
  if (this->smsg_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsg_name());
  }

  // .zxtest.prototest.TestSendArray Msg_info = 2;
  if (this->has_msg_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *msg_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestSendMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zxtest.prototest.TestSendMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const TestSendMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestSendMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zxtest.prototest.TestSendMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zxtest.prototest.TestSendMsg)
    MergeFrom(*source);
  }
}

void TestSendMsg::MergeFrom(const TestSendMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zxtest.prototest.TestSendMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.smsg_name().size() > 0) {

    smsg_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsg_name_);
  }
  if (from.has_msg_info()) {
    mutable_msg_info()->::zxtest::prototest::TestSendArray::MergeFrom(from.msg_info());
  }
}

void TestSendMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zxtest.prototest.TestSendMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestSendMsg::CopyFrom(const TestSendMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zxtest.prototest.TestSendMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestSendMsg::IsInitialized() const {
  return true;
}

void TestSendMsg::Swap(TestSendMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestSendMsg::InternalSwap(TestSendMsg* other) {
  using std::swap;
  smsg_name_.Swap(&other->smsg_name_);
  swap(msg_info_, other->msg_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestSendMsg::GetMetadata() const {
  protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TestSendArrayMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestSendArrayMsg::kSMsgNameFieldNumber;
const int TestSendArrayMsg::kMsgArrayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestSendArrayMsg::TestSendArrayMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_test_2eproto::InitDefaultsTestSendArrayMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zxtest.prototest.TestSendArrayMsg)
}
TestSendArrayMsg::TestSendArrayMsg(const TestSendArrayMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      msg_array_(from.msg_array_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  smsg_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsg_name().size() > 0) {
    smsg_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsg_name_);
  }
  // @@protoc_insertion_point(copy_constructor:zxtest.prototest.TestSendArrayMsg)
}

void TestSendArrayMsg::SharedCtor() {
  smsg_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TestSendArrayMsg::~TestSendArrayMsg() {
  // @@protoc_insertion_point(destructor:zxtest.prototest.TestSendArrayMsg)
  SharedDtor();
}

void TestSendArrayMsg::SharedDtor() {
  smsg_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestSendArrayMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestSendArrayMsg::descriptor() {
  ::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestSendArrayMsg& TestSendArrayMsg::default_instance() {
  ::protobuf_test_2eproto::InitDefaultsTestSendArrayMsg();
  return *internal_default_instance();
}


void TestSendArrayMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:zxtest.prototest.TestSendArrayMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_array_.Clear();
  smsg_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool TestSendArrayMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zxtest.prototest.TestSendArrayMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sMsg_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsg_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsg_name().data(), static_cast<int>(this->smsg_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "zxtest.prototest.TestSendArrayMsg.sMsg_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .zxtest.prototest.TestSendArray Msg_array = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_msg_array()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zxtest.prototest.TestSendArrayMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zxtest.prototest.TestSendArrayMsg)
  return false;
#undef DO_
}

void TestSendArrayMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zxtest.prototest.TestSendArrayMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sMsg_name = 1;
  if (this->smsg_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsg_name().data(), static_cast<int>(this->smsg_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "zxtest.prototest.TestSendArrayMsg.sMsg_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->smsg_name(), output);
  }

  // repeated .zxtest.prototest.TestSendArray Msg_array = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->msg_array_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->msg_array(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:zxtest.prototest.TestSendArrayMsg)
}

::google::protobuf::uint8* TestSendArrayMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zxtest.prototest.TestSendArrayMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sMsg_name = 1;
  if (this->smsg_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsg_name().data(), static_cast<int>(this->smsg_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "zxtest.prototest.TestSendArrayMsg.sMsg_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->smsg_name(), target);
  }

  // repeated .zxtest.prototest.TestSendArray Msg_array = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->msg_array_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->msg_array(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zxtest.prototest.TestSendArrayMsg)
  return target;
}

size_t TestSendArrayMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zxtest.prototest.TestSendArrayMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .zxtest.prototest.TestSendArray Msg_array = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->msg_array_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->msg_array(static_cast<int>(i)));
    }
  }

  // string sMsg_name = 1;
  if (this->smsg_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsg_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestSendArrayMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zxtest.prototest.TestSendArrayMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const TestSendArrayMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestSendArrayMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zxtest.prototest.TestSendArrayMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zxtest.prototest.TestSendArrayMsg)
    MergeFrom(*source);
  }
}

void TestSendArrayMsg::MergeFrom(const TestSendArrayMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zxtest.prototest.TestSendArrayMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  msg_array_.MergeFrom(from.msg_array_);
  if (from.smsg_name().size() > 0) {

    smsg_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsg_name_);
  }
}

void TestSendArrayMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zxtest.prototest.TestSendArrayMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestSendArrayMsg::CopyFrom(const TestSendArrayMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zxtest.prototest.TestSendArrayMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestSendArrayMsg::IsInitialized() const {
  return true;
}

void TestSendArrayMsg::Swap(TestSendArrayMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestSendArrayMsg::InternalSwap(TestSendArrayMsg* other) {
  using std::swap;
  CastToBase(&msg_array_)->InternalSwap(CastToBase(&other->msg_array_));
  smsg_name_.Swap(&other->smsg_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestSendArrayMsg::GetMetadata() const {
  protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TestImport::InitAsDefaultInstance() {
  ::zxtest::prototest::_TestImport_default_instance_._instance.get_mutable()->userinfo_ = const_cast< ::zxtest::user::UserInfo*>(
      ::zxtest::user::UserInfo::internal_default_instance());
  ::zxtest::prototest::_TestImport_default_instance_._instance.get_mutable()->log_ = const_cast< ::zxtest::log::SendLog*>(
      ::zxtest::log::SendLog::internal_default_instance());
}
void TestImport::clear_userinfo() {
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) {
    delete userinfo_;
  }
  userinfo_ = NULL;
}
void TestImport::clear_log() {
  if (GetArenaNoVirtual() == NULL && log_ != NULL) {
    delete log_;
  }
  log_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestImport::kSImportNameFieldNumber;
const int TestImport::kUserinfoFieldNumber;
const int TestImport::kLogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestImport::TestImport()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_test_2eproto::InitDefaultsTestImport();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zxtest.prototest.TestImport)
}
TestImport::TestImport(const TestImport& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  simport_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.simport_name().size() > 0) {
    simport_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.simport_name_);
  }
  if (from.has_userinfo()) {
    userinfo_ = new ::zxtest::user::UserInfo(*from.userinfo_);
  } else {
    userinfo_ = NULL;
  }
  if (from.has_log()) {
    log_ = new ::zxtest::log::SendLog(*from.log_);
  } else {
    log_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zxtest.prototest.TestImport)
}

void TestImport::SharedCtor() {
  simport_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&userinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&log_) -
      reinterpret_cast<char*>(&userinfo_)) + sizeof(log_));
  _cached_size_ = 0;
}

TestImport::~TestImport() {
  // @@protoc_insertion_point(destructor:zxtest.prototest.TestImport)
  SharedDtor();
}

void TestImport::SharedDtor() {
  simport_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete userinfo_;
  if (this != internal_default_instance()) delete log_;
}

void TestImport::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestImport::descriptor() {
  ::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestImport& TestImport::default_instance() {
  ::protobuf_test_2eproto::InitDefaultsTestImport();
  return *internal_default_instance();
}


void TestImport::Clear() {
// @@protoc_insertion_point(message_clear_start:zxtest.prototest.TestImport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  simport_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) {
    delete userinfo_;
  }
  userinfo_ = NULL;
  if (GetArenaNoVirtual() == NULL && log_ != NULL) {
    delete log_;
  }
  log_ = NULL;
  _internal_metadata_.Clear();
}

bool TestImport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zxtest.prototest.TestImport)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sImport_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_simport_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->simport_name().data(), static_cast<int>(this->simport_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "zxtest.prototest.TestImport.sImport_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zxtest.user.UserInfo userinfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zxtest.log.SendLog Log = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_log()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zxtest.prototest.TestImport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zxtest.prototest.TestImport)
  return false;
#undef DO_
}

void TestImport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zxtest.prototest.TestImport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sImport_name = 1;
  if (this->simport_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->simport_name().data(), static_cast<int>(this->simport_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "zxtest.prototest.TestImport.sImport_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->simport_name(), output);
  }

  // .zxtest.user.UserInfo userinfo = 2;
  if (this->has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *userinfo_, output);
  }

  // .zxtest.log.SendLog Log = 3;
  if (this->has_log()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *log_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:zxtest.prototest.TestImport)
}

::google::protobuf::uint8* TestImport::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zxtest.prototest.TestImport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sImport_name = 1;
  if (this->simport_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->simport_name().data(), static_cast<int>(this->simport_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "zxtest.prototest.TestImport.sImport_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->simport_name(), target);
  }

  // .zxtest.user.UserInfo userinfo = 2;
  if (this->has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *userinfo_, deterministic, target);
  }

  // .zxtest.log.SendLog Log = 3;
  if (this->has_log()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *log_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zxtest.prototest.TestImport)
  return target;
}

size_t TestImport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zxtest.prototest.TestImport)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sImport_name = 1;
  if (this->simport_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->simport_name());
  }

  // .zxtest.user.UserInfo userinfo = 2;
  if (this->has_userinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *userinfo_);
  }

  // .zxtest.log.SendLog Log = 3;
  if (this->has_log()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *log_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestImport::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zxtest.prototest.TestImport)
  GOOGLE_DCHECK_NE(&from, this);
  const TestImport* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestImport>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zxtest.prototest.TestImport)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zxtest.prototest.TestImport)
    MergeFrom(*source);
  }
}

void TestImport::MergeFrom(const TestImport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zxtest.prototest.TestImport)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.simport_name().size() > 0) {

    simport_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.simport_name_);
  }
  if (from.has_userinfo()) {
    mutable_userinfo()->::zxtest::user::UserInfo::MergeFrom(from.userinfo());
  }
  if (from.has_log()) {
    mutable_log()->::zxtest::log::SendLog::MergeFrom(from.log());
  }
}

void TestImport::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zxtest.prototest.TestImport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestImport::CopyFrom(const TestImport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zxtest.prototest.TestImport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestImport::IsInitialized() const {
  return true;
}

void TestImport::Swap(TestImport* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestImport::InternalSwap(TestImport* other) {
  using std::swap;
  simport_name_.Swap(&other->simport_name_);
  swap(userinfo_, other->userinfo_);
  swap(log_, other->log_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestImport::GetMetadata() const {
  protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Testmessage::InitAsDefaultInstance() {
  ::zxtest::prototest::_Testmessage_default_instance_._instance.get_mutable()->msg_array_ = const_cast< ::zxtest::prototest::TestSendArray*>(
      ::zxtest::prototest::TestSendArray::internal_default_instance());
  ::zxtest::prototest::_Testmessage_default_instance_._instance.get_mutable()->info_ = const_cast< ::zxtest::user::UserInfo*>(
      ::zxtest::user::UserInfo::internal_default_instance());
}
void Testmessage::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Testmessage::kNameFieldNumber;
const int Testmessage::kEnumcodeFieldNumber;
const int Testmessage::kU32NumberFieldNumber;
const int Testmessage::kMsgArrayFieldNumber;
const int Testmessage::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Testmessage::Testmessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_test_2eproto::InitDefaultsTestmessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:zxtest.prototest.Testmessage)
}
Testmessage::Testmessage(const Testmessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      u32number_(from.u32number_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_msg_array()) {
    msg_array_ = new ::zxtest::prototest::TestSendArray(*from.msg_array_);
  } else {
    msg_array_ = NULL;
  }
  if (from.has_info()) {
    info_ = new ::zxtest::user::UserInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  enumcode_ = from.enumcode_;
  // @@protoc_insertion_point(copy_constructor:zxtest.prototest.Testmessage)
}

void Testmessage::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msg_array_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enumcode_) -
      reinterpret_cast<char*>(&msg_array_)) + sizeof(enumcode_));
  _cached_size_ = 0;
}

Testmessage::~Testmessage() {
  // @@protoc_insertion_point(destructor:zxtest.prototest.Testmessage)
  SharedDtor();
}

void Testmessage::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete msg_array_;
  if (this != internal_default_instance()) delete info_;
}

void Testmessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Testmessage::descriptor() {
  ::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Testmessage& Testmessage::default_instance() {
  ::protobuf_test_2eproto::InitDefaultsTestmessage();
  return *internal_default_instance();
}


void Testmessage::Clear() {
// @@protoc_insertion_point(message_clear_start:zxtest.prototest.Testmessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  u32number_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && msg_array_ != NULL) {
    delete msg_array_;
  }
  msg_array_ = NULL;
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  enumcode_ = 0;
  _internal_metadata_.Clear();
}

bool Testmessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zxtest.prototest.Testmessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "zxtest.prototest.Testmessage.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zxtest.prototest.Recode enumcode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_enumcode(static_cast< ::zxtest::prototest::Recode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 u32number = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_u32number())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_u32number())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zxtest.prototest.TestSendArray Msg_array = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_msg_array()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .zxtest.user.UserInfo info = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zxtest.prototest.Testmessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zxtest.prototest.Testmessage)
  return false;
#undef DO_
}

void Testmessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zxtest.prototest.Testmessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "zxtest.prototest.Testmessage.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .zxtest.prototest.Recode enumcode = 2;
  if (this->enumcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->enumcode(), output);
  }

  // repeated uint32 u32number = 3;
  if (this->u32number_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _u32number_cached_byte_size_));
  }
  for (int i = 0, n = this->u32number_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->u32number(i), output);
  }

  // .zxtest.prototest.TestSendArray Msg_array = 4;
  if (this->has_msg_array()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *msg_array_, output);
  }

  // .zxtest.user.UserInfo info = 5;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:zxtest.prototest.Testmessage)
}

::google::protobuf::uint8* Testmessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zxtest.prototest.Testmessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "zxtest.prototest.Testmessage.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .zxtest.prototest.Recode enumcode = 2;
  if (this->enumcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->enumcode(), target);
  }

  // repeated uint32 u32number = 3;
  if (this->u32number_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _u32number_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->u32number_, target);
  }

  // .zxtest.prototest.TestSendArray Msg_array = 4;
  if (this->has_msg_array()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *msg_array_, deterministic, target);
  }

  // .zxtest.user.UserInfo info = 5;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zxtest.prototest.Testmessage)
  return target;
}

size_t Testmessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zxtest.prototest.Testmessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 u32number = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->u32number_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _u32number_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .zxtest.prototest.TestSendArray Msg_array = 4;
  if (this->has_msg_array()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *msg_array_);
  }

  // .zxtest.user.UserInfo info = 5;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *info_);
  }

  // .zxtest.prototest.Recode enumcode = 2;
  if (this->enumcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->enumcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Testmessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zxtest.prototest.Testmessage)
  GOOGLE_DCHECK_NE(&from, this);
  const Testmessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Testmessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zxtest.prototest.Testmessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zxtest.prototest.Testmessage)
    MergeFrom(*source);
  }
}

void Testmessage::MergeFrom(const Testmessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zxtest.prototest.Testmessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  u32number_.MergeFrom(from.u32number_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_msg_array()) {
    mutable_msg_array()->::zxtest::prototest::TestSendArray::MergeFrom(from.msg_array());
  }
  if (from.has_info()) {
    mutable_info()->::zxtest::user::UserInfo::MergeFrom(from.info());
  }
  if (from.enumcode() != 0) {
    set_enumcode(from.enumcode());
  }
}

void Testmessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zxtest.prototest.Testmessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Testmessage::CopyFrom(const Testmessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zxtest.prototest.Testmessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Testmessage::IsInitialized() const {
  return true;
}

void Testmessage::Swap(Testmessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Testmessage::InternalSwap(Testmessage* other) {
  using std::swap;
  u32number_.InternalSwap(&other->u32number_);
  name_.Swap(&other->name_);
  swap(msg_array_, other->msg_array_);
  swap(info_, other->info_);
  swap(enumcode_, other->enumcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Testmessage::GetMetadata() const {
  protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace prototest
}  // namespace zxtest
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zxtest::prototest::TestSend* Arena::Create< ::zxtest::prototest::TestSend >(Arena* arena) {
  return Arena::CreateInternal< ::zxtest::prototest::TestSend >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zxtest::prototest::TestReceive* Arena::Create< ::zxtest::prototest::TestReceive >(Arena* arena) {
  return Arena::CreateInternal< ::zxtest::prototest::TestReceive >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zxtest::prototest::TestSendArray* Arena::Create< ::zxtest::prototest::TestSendArray >(Arena* arena) {
  return Arena::CreateInternal< ::zxtest::prototest::TestSendArray >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zxtest::prototest::TestSendMsg* Arena::Create< ::zxtest::prototest::TestSendMsg >(Arena* arena) {
  return Arena::CreateInternal< ::zxtest::prototest::TestSendMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zxtest::prototest::TestSendArrayMsg* Arena::Create< ::zxtest::prototest::TestSendArrayMsg >(Arena* arena) {
  return Arena::CreateInternal< ::zxtest::prototest::TestSendArrayMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zxtest::prototest::TestImport* Arena::Create< ::zxtest::prototest::TestImport >(Arena* arena) {
  return Arena::CreateInternal< ::zxtest::prototest::TestImport >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zxtest::prototest::Testmessage* Arena::Create< ::zxtest::prototest::Testmessage >(Arena* arena) {
  return Arena::CreateInternal< ::zxtest::prototest::Testmessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
